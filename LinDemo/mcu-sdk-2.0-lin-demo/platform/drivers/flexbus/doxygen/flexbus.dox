/*!

@defgroup flexbus External Bus Interface (FLEXBUS)
@details The SDK provides Peripheral driver for the Crossbar External Bus Interface (FLEXBUS) block of Kinetis devices.
@{

# Overview {#OV}

A multi-function external bus interface called the FlexBus interface controller is provided
on the device with basic functionality of interfacing to slave-only devices. It can be
directly connected to the following asynchronous or synchronous devices with little or no
additional circuitry:
    • External ROMs
    • Flash memories
    • Programmable logic devices
    • Other simple target (slave) devices
For asynchronous devices, a simple chip-select based interface can be used.
The FlexBus interface has up to six general purpose chip-selects, FB_CS[5:0]. The actual
number of chip selects available depends upon the device and its pin configuration.

# Function groups {#FlexbusFunctionalGroups}

## FLEXBUS functional operation {#FlexbusFunctionalOperation}
 To configure FLEXBUS driver, there are two ways to configure flexbus_config_t structure.
     1. Using FLEXBUS_GetDefaultConfig() function
     2. Set parameters in flexbus_config_t structure.

 To initialize and configure the FLEXBUS driver, call the FLEXBUS_Init() function pass a pointer to
 the flexbus_config_t structure.

 To De-initialize the FLEXBUS driver, call the FLEXBUS_Deinit() function.

# Typical use case and example {#FlexbusExample}

This example show how to write/read to external memories (MRAM) by using FLEXBUS module.

~~~~~{.c}
    flexbus_config_t flexbusUserConfig;

    FLEXBUS_GetDefaultConfig(&flexbusUserConfig); /* Get default config */
    /* Configure some parameters when using MRAM */
    flexbusUserConfig.waitStates            = 2U;                 /* Wait 2 states */
    flexbusUserConfig.chipBaseAddress       = MRAM_START_ADDRESS; /* MRAM address for using FlexBus */
    flexbusUserConfig.chipBaseAddressMask   = 7U;                 /* 512 Kbytes memory size */
    FLEXBUS_Init(FB, &flexbusUserConfig); /* Initialize and configure FLEXBUS module */

    /* Do something */

    FLEXBUS_DeInit(FB);
~~~~~

*/
/*! @} */
